#!/usr/bin/env ruby

require File.expand_path("../../lib/svg_circle_count_graph.rb", __FILE__)
require File.expand_path("../../lib/symbol_count_graph.rb", __FILE__)
require File.expand_path("../../lib/bitmap_circle_count_graph.rb", __FILE__)

require 'optparse'

# defaults:
options = { type: :svg }

OptionParser.new do |opts|
  opts.banner = "Usage: bin/graph_tool [options]"

  opts.on("-d DATA", "--data DATA", Array, "Provide multiple data points in this format: Purple:33,Gold:22,Olive:12") do |data|
    options[:data] = data.map { |d| d.split(":") }.to_h
  end

  opts.on("-t TYPE", "--type TYPE", [:text, :svg, :png], "Select graph type (text, svg, png)") do |t|
    options[:type] = t
  end

  opts.on("-c COLUMNS", "--columns COLUMNS", Integer, "Set number of columns") do |c|
    options[:columns] = c
  end

  opts.on("-r RADIUS", "--radius RADIUS", Integer, "Set the circle radius") do |r|
    options[:radius] = r
  end

  opts.on("-h", "--help", "Prints this help") do
    puts opts
    exit
  end
end.parse!(ARGV.empty? ? ['--help'] : ARGV)

data = options[:data]
graph_options = options.select { |key, value| [:columns, :radius].include? key }

if data
  if options[:type] == :text
    graph = SymbolCountGraph.new(data, graph_options)
  elsif options[:type] == :svg
    graph = SvgCircleCountGraph.new(data, graph_options)
  elsif options[:type] == :png
    graph = BitmapCircleCountGraph.new(data, graph_options)
  end
  puts graph.render
end
